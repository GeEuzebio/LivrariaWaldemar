@model LibraryApp.Models.Scheduling

@{
    int i = ViewBag.Position;
}
<h2>Informações do Agendamento</h2>
<div class="col-md-4">
    <form asp-action="CreateSchedule">
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
        <input name="pos" type="number" value="@i" style="display:none;" />
        <input name="day" type="date" value="@Model.Day!.Value.ToString("yyyy-MM-dd")" style="display:none;" />
        <div class="form-group" >
            <label class="control-label"><strong>Data do Agendamento</strong></label>
            <p><strong>@Model.Day!.Value.Day/@Model.Day!.Value.Month/@Model.Day!.Value.Year</strong></p>
            <span asp-validation-for="Day" class="text-danger"></span>
        </div>
        <div class="form-group mb-4">
            <label class="control-label"><strong>Horário</strong></label>
            <text><strong>@Model.Hours[i]</strong></text>
            <span asp-validation-for="Day" class="text-danger"></span>
        </div>
        <div class="form-group">
            <label class="control-label">Turma</label>
            <select name="classRoom" class="form-select mb-3">
                @foreach(ClassRoom item in Enum.GetValues(typeof(ClassRoom)))
                {
                    <option value="@item">@item.GetDescription()</option>
                }
            </select>
            <span asp-validation-for="ClassRoom" class="text-danger"></span>
        </div>
        <div class="form-group">
            <label class="control-label">Professor</label>
            <select name="professor" class="form-select mb-3">
                @foreach(Professionals item in Enum.GetValues(typeof(Professionals)))
                {
                    <option value="@item">@item.GetDescription()</option>
                }
            </select>
        </div>
        <input type="submit" class="btn btn-success" value="Realizar Agendamento">
    </form>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}